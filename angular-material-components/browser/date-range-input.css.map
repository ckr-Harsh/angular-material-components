{
  "version": 3,
  "sources": ["projects/datetime-picker-v2/src/lib/date-range-input.scss", "projects/datetime-picker-v2/src/lib/_vendor-prefixes.scss", "node_modules/@angular/cdk/a11y/_index.scss"],
  "sourcesContent": ["@use \"sass:math\";\r\n@use \"@angular/cdk\";\r\n@import \"./vendor-prefixes\";\r\n\r\n// @use '../core/style/variables';\r\n// @use '../core/style/vendor-prefixes';\r\n\r\n$swift-ease-out-duration: 400ms !default;\r\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\r\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\r\n\r\n$date-range-input-separator-spacing: 4px;\r\n$date-range-input-part-max-width: calc(\r\n  50% - #{$date-range-input-separator-spacing}\r\n);\r\n\r\n@mixin placeholder-transition($property) {\r\n  transition: #{$property} $swift-ease-out-duration math.div(\r\n      $swift-ease-out-duration,\r\n      3\r\n    ) $swift-ease-out-timing-function;\r\n}\r\n\r\n// Host of the date range input.\r\n.mat-date-range-input {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n// Inner container that wraps around all the content.\r\n.mat-date-range-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n// Text shown between the two inputs.\r\n.mat-date-range-input-separator {\r\n  @include placeholder-transition(opacity);\r\n  margin: 0 $date-range-input-separator-spacing;\r\n\r\n  ._mat-animation-noopable & {\r\n    transition: none;\r\n  }\r\n}\r\n\r\n.mat-date-range-input-separator-hidden {\r\n  // Disable text selection, because the user can click\r\n  // through the main label when the input is disabled.\r\n  @include user-select(none);\r\n\r\n  // Use opacity to hide the text, because `color: transparent` will be shown in high contrast mode.\r\n  opacity: 0;\r\n  transition: none;\r\n}\r\n\r\n// Wrapper around the inner inputs. Used to facilitate the auto-resizing input.\r\n.mat-date-range-input-wrapper {\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-width: $date-range-input-part-max-width;\r\n}\r\n\r\n.mat-date-range-input-end-wrapper {\r\n  // Allow the end input to fill the rest of the available space.\r\n  flex-grow: 1;\r\n}\r\n\r\n// Underlying input inside the range input.\r\n.mat-date-range-input-inner {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  // Reset the input so it's just a transparent rectangle.\r\n  font: inherit;\r\n  background: transparent;\r\n  color: currentColor;\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  vertical-align: bottom;\r\n  text-align: inherit;\r\n  -webkit-appearance: none;\r\n  width: 100%;\r\n\r\n  // Does nothing on Chrome, but necessary for the text\r\n  // to align in some cases on Safari and Firefox.\r\n  height: 100%;\r\n\r\n  // Undo the red box-shadow glow added by Firefox on invalid inputs.\r\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-ui-invalid\r\n  &:-moz-ui-invalid {\r\n    box-shadow: none;\r\n  }\r\n\r\n  .mat-form-field-hide-placeholder &,\r\n  .mat-date-range-input-hide-placeholders & {\r\n    @include input-placeholder {\r\n      // Disable text selection, because the user can click\r\n      // through the main label when the input is disabled.\r\n      @include user-select(none);\r\n\r\n      // Needs to be !important, because the placeholder will end up inheriting the\r\n      // input color in IE, if the consumer overrides it with a higher specificity.\r\n      color: transparent !important;\r\n      -webkit-text-fill-color: transparent;\r\n      transition: none;\r\n\r\n      @include cdk.high-contrast(active, off) {\r\n        // In high contrast mode the browser will render the\r\n        // placeholder despite the `color: transparent` above.\r\n        opacity: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ._mat-animation-noopable & {\r\n    @include input-placeholder {\r\n      transition: none;\r\n    }\r\n  }\r\n}\r\n\r\n// We want the start input to be flush against the separator, no matter how much text it has, but\r\n// the problem is that inputs have a fixed width. We work around the issue by implementing an\r\n// auto-resizing input that stretches based on its text, up to a point. It works by having\r\n// a relatively-positioned wrapper (`.mat-date-range-input-wrapper` below) and an absolutely-\r\n// positioned `input`, as well as a `span` inside the wrapper which mirrors the input's value and\r\n// placeholder. As the user is typing, the value gets mirrored in the span which causes the wrapper\r\n// to stretch and the input with it.\r\n.mat-date-range-input-mirror {\r\n  // Disable user selection so users don't accidentally copy the text via ctrl + A.\r\n  @include user-select(none);\r\n\r\n  // Hide the element so it doesn't get read out by screen\r\n  // readers and it doesn't show up behind the input.\r\n  visibility: hidden;\r\n\r\n  // Text inside inputs never wraps so the one in the span shouldn't either.\r\n  white-space: nowrap;\r\n  display: inline-block;\r\n\r\n  // Prevent the container from collapsing. Make it more\r\n  // than 1px so the input caret doesn't get clipped.\r\n  min-width: 2px;\r\n}\r\n\r\n.mat-mdc-form-field-type-mat-date-range-input .mat-mdc-form-field-infix {\r\n  // Bump the default width slightly since it's somewhat cramped with two inputs and a separator.\r\n  width: 200px;\r\n}\r\n", "// stylelint-disable material/no-prefixes\r\n@mixin user-select($value) {\r\n  -webkit-user-select: $value;\r\n  user-select: $value;\r\n}\r\n\r\n@mixin input-placeholder {\r\n  &::placeholder {\r\n    @content;\r\n  }\r\n\r\n  &::-moz-placeholder {\r\n    @content;\r\n  }\r\n\r\n  &::-webkit-input-placeholder {\r\n    @content;\r\n  }\r\n\r\n  // Note: this isn't necessary anymore since we don't support\r\n  // IE, but it caused some presubmit failures in #23416.\r\n  &:-ms-input-placeholder {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin backface-visibility($value) {\r\n  -webkit-backface-visibility: $value;\r\n  backface-visibility: $value;\r\n}\r\n\r\n@mixin color-adjust($value) {\r\n  -webkit-print-color-adjust: $value;\r\n  color-adjust: $value;\r\n}\r\n\r\n@mixin private-background-clip($value) {\r\n  -webkit-background-clip: $value;\r\n  background-clip: $value;\r\n}\r\n\r\n@mixin clip-path($value) {\r\n  -webkit-clip-path: $value;\r\n  clip-path: $value;\r\n}\r\n// stylelint-enable\r\n", "/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Applies styles for users in high contrast mode.\n///\n/// @param {String} target Type of high contrast setting to target. Can be `active` or `none`.\n///   Defaults to `active`.\n/// @param {String} encapsulation No longer used and will be removed.\n@mixin high-contrast($target: active, $encapsulation: null) {\n  // Historically we used to support `black-on-white` and `white-on-black` so we\n  // allow them here anyway. They'll be coerced to `active` below.\n  @if ($target != 'active' and $target != 'none' and $target != 'black-on-white' and\n    $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\" and \"none\"';\n  }\n\n  @media (forced-colors: #{if($target == none, none, active)}) {\n    @content;\n  }\n}\n"],
  "mappings": ";AAwBA,CAAA;AACE,WAAA;AACA,SAAA;;AAIF,CAAA;AACE,WAAA;AACA,eAAA;;AAIF,CAAA;AAnBE,cAAA,QAAA,MAAA,iBAAA,aAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA;AAqBA,UAAA,EAAA;;AAEA,CAAA,wBAAA,CAJF;AAKI,cAAA;;AAIJ,CAAA;AC3CE,uBD8CqB;AC7CrB,eD6CqB;AAGrB,WAAA;AACA,cAAA;;AAIF,CAAA;AACE,YAAA;AACA,YAAA;AACA,aA/CgC,KAAA,IAAA,EAAA;;AAkDlC,CAAA;AAEE,aAAA;;AAIF,CAAA;AACE,YAAA;AACA,OAAA;AACA,QAAA;AAGA,QAAA;AACA,cAAA;AACA,SAAA;AACA,UAAA;AACA,WAAA;AACA,WAAA;AACA,UAAA;AACA,kBAAA;AACA,cAAA;AACA,sBAAA;AACA,SAAA;AAIA,UAAA;;AAIA,CAxBF,0BAwBE;AACE,cAAA;;ACtFF,CAAA,gCAAA,CD6DF,0BC7DE;AAAA,CAAA,uCAAA,CD6DF,0BC7DE;AALA,uBDmGyB;AClGzB,eDkGyB;AAIrB,SAAA;AACA,2BAAA;AACA,cAAA;;AEnDJ,OAAA,CAAA,aAAA,EAAA;ADjDA,GAAA,gCAAA,CD6DF,0BC7DE;EAAA,CAAA,uCAAA,CD6DF,0BC7DE;ADyGM,aAAA;;;ACrGN,CAJA,gCAIA,CDyDF,0BCzDE;AAAA,CAJA,uCAIA,CDyDF,0BCzDE;AATA,uBDmGyB;AClGzB,eDkGyB;AAIrB,SAAA;AACA,2BAAA;AACA,cAAA;;AEnDJ,OAAA,CAAA,aAAA,EAAA;AD7CA,GAJA,gCAIA,CDyDF,0BCzDE;EAAA,CAJA,uCAIA,CDyDF,0BCzDE;ADqGM,aAAA;;;ACjGN,CARA,gCAQA,CDqDF,0BCrDE;AAAA,CARA,uCAQA,CDqDF,0BCrDE;AAbA,uBDmGyB;AClGzB,eDkGyB;AAIrB,SAAA;AACA,2BAAA;AACA,cAAA;;AEnDJ,OAAA,CAAA,aAAA,EAAA;ADzCA,GARA,gCAQA,CDqDF,0BCrDE;EAAA,CARA,uCAQA,CDqDF,0BCrDE;ADiGM,aAAA;;;AC3FN,CAdA,gCAcA,CD+CF,0BC/CE;AAAA,CAdA,uCAcA,CD+CF,0BC/CE;AAnBA,uBDmGyB;AClGzB,eDkGyB;AAIrB,SAAA;AACA,2BAAA;AACA,cAAA;;AEnDJ,OAAA,CAAA,aAAA,EAAA;ADnCA,GAdA,gCAcA,CD+CF,0BC/CE;EAAA,CAdA,uCAcA,CD+CF,0BC/CE;AD2FM,aAAA;;;ACzGN,CDiCA,wBCjCA,CD6DF,0BC7DE;ADgHI,cAAA;;AC5GJ,CD6BA,wBC7BA,CDyDF,0BCzDE;AD4GI,cAAA;;ACxGJ,CDyBA,wBCzBA,CDqDF,0BCrDE;ADwGI,cAAA;;AClGJ,CDmBA,wBCnBA,CD+CF,0BC/CE;ADkGI,cAAA;;AAYN,CAAA;ACjIE,uBDmIqB;AClIrB,eDkIqB;AAIrB,cAAA;AAGA,eAAA;AACA,WAAA;AAIA,aAAA;;AAGF,CAAA,6CAAA,CAAA;AAEE,SAAA;;",
  "names": []
}
