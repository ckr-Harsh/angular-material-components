{
  "version": 3,
  "sources": ["projects/datetime-picker-v2/src/lib/datepicker-toggle.scss", "node_modules/@angular/cdk/a11y/_index.scss"],
  "sourcesContent": ["@use '@angular/cdk';\r\n\r\n// We support the case where the form field is disabled, but the datepicker is not.\r\n// MDC sets `pointer-events: none` on disabled form fields which prevents clicks on the toggle.\r\n.mat-datepicker-toggle {\r\n  pointer-events: auto;\r\n}\r\n\r\n@include cdk.high-contrast(active, off) {\r\n  .mat-datepicker-toggle-default-icon {\r\n    // On Chromium-based browsers the icon doesn't appear to inherit the text color in high\r\n    // contrast mode so we have to set it explicitly. This is a no-op on IE and Firefox.\r\n    color: CanvasText;\r\n  }\r\n}\r\n", "/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Applies styles for users in high contrast mode.\n///\n/// @param {String} target Type of high contrast setting to target. Can be `active` or `none`.\n///   Defaults to `active`.\n/// @param {String} encapsulation No longer used and will be removed.\n@mixin high-contrast($target: active, $encapsulation: null) {\n  // Historically we used to support `black-on-white` and `white-on-black` so we\n  // allow them here anyway. They'll be coerced to `active` below.\n  @if ($target != 'active' and $target != 'none' and $target != 'black-on-white' and\n    $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\" and \"none\"';\n  }\n\n  @media (forced-colors: #{if($target == none, none, active)}) {\n    @content;\n  }\n}\n"],
  "mappings": ";AAIA,CAAA;AACE,kBAAA;;ACmDA,OAAA,CAAA,aAAA,EAAA;AD/CA,GAAA;AAGE,WAAA;;;",
  "names": []
}
